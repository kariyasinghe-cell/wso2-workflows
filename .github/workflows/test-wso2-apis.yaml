name: Reusable workflow for deploying APIM APIs

on:
  workflow_call:
    inputs:
      includeAPIs:
        description: 'Comma-separated list of APIM APIs to include'
        required: true
        type: string
        
      fromChild:
        description: "Flag to indicate this is from child workflow"
        required: false
        default: "false"
        type: string
        
  workflow_dispatch:
    inputs:
      includeAPIs:
        description: 'Comma-separated list of APIM APIs to include (leave empty to include all)'
        required: false
        default: ''

jobs:
  process-apim:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          repository: kariyasinghe-cell/wso2-workflows
          ref: ${{ github.ref }}

      - name: Determine APIs to process
        id: get_apis
        run: |
          set -e
          cd "$GITHUB_WORKSPACE"
          APIM_PATH="$GITHUB_WORKSPACE/apim"

          # Determine input source based on fromChild flag
          if [ "${{ inputs.fromChild }}" == "true" ]; then
            # Called from child workflow
            INPUT="${{ inputs.includeAPIs }}"
          else
            # Manual workflow_dispatch run
            INPUT="${{ github.event.inputs.includeAPIs }}"
          fi

          # If input is empty, include all folders
          if [ -z "$INPUT" ] && [ "${{ inputs.fromChild }}" == "true" ]; then
            echo "❌ No input given from parent workflow — stopping pipeline!"
            exit 1
          elif [ -z "$INPUT" ]; then
            echo "No input given — including all folders under apim/"
            FOLDERS=$(ls -1 "$APIM_PATH")
          else
            echo "User provided input — using only: $INPUT"
            IFS=',' read -r -a ARR <<< "$INPUT"

            VALID_FOLDERS=()
            INVALID_FOLDERS=()

            for folder in "${ARR[@]}"; do
              folder=$(echo "$folder" | xargs)  # trim spaces
              if [ -d "$APIM_PATH/$folder" ]; then
                VALID_FOLDERS+=("$folder")
              else
                INVALID_FOLDERS+=("$folder")
              fi
            done

            if [ ${#INVALID_FOLDERS[@]} -ne 0 ]; then
              echo "⚠️ Warning: These folders do not exist under 'apim/' and will be ignored: ${INVALID_FOLDERS[*]}"
            fi

            if [ ${#VALID_FOLDERS[@]} -eq 0 ]; then
              echo "❌ No valid folders found from input!"
              exit 1
            fi

            # Join valid folders into a space-separated string
            FOLDERS="${VALID_FOLDERS[*]}"
          fi

          echo "✅ APIM folders to process: $FOLDERS"

          # Output for subsequent steps
          {
            echo "folders<<EOF"
            echo "$FOLDERS"
            echo "EOF"
          } >> "$GITHUB_OUTPUT"

      - name: Use APIM folders
        run: |
          echo "Folders from previous step:"
          echo "${{ steps.get_apis.outputs.folders }}"
